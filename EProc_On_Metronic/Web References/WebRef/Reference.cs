//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EProc_On_Metronic.WebRef {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="eprocurement_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement")]
    public partial class eprocurement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnRegisterVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplyPreQualificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplyRFQOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyRFQOLDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddDirectorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplyforTenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCountOpenTendersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCountAppliedTendersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCountTendersAwardedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplyforOpenTenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBlogOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBlogReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateVendorstatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateRfQDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddPurchaseReqLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnReqforRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnBLOBRfQDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDownloadRfQPTDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSupplierRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertDirectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertLitigationHOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertSpecialGrpOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPastXepOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBalanceSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertIncomestatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertFiledetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStaffEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStaffQlfEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStaffXPrEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCompleteSupplierRegOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetOwnerPercentageOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertRFIresponseHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetLastDocumentNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertRFIResponseLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitResponseFinalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertFiledetails_RfiOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmisionResponseStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetEvalCritScoresOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public eprocurement() {
            this.Url = global::EProc_On_Metronic.Properties.Settings.Default.EProc_On_Metronic_WebRef_eprocurement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnRegisterVendorCompletedEventHandler FnRegisterVendorCompleted;
        
        /// <remarks/>
        public event ResetPassCompletedEventHandler ResetPassCompleted;
        
        /// <remarks/>
        public event FnApplyPreQualificationCompletedEventHandler FnApplyPreQualificationCompleted;
        
        /// <remarks/>
        public event GetCurrentYearCompletedEventHandler GetCurrentYearCompleted;
        
        /// <remarks/>
        public event FnApplyRFQCompletedEventHandler FnApplyRFQCompleted;
        
        /// <remarks/>
        public event ApplyRFQOLDCompletedEventHandler ApplyRFQOLDCompleted;
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        public event ActivateAccountCompletedEventHandler ActivateAccountCompleted;
        
        /// <remarks/>
        public event FnAddDirectorsCompletedEventHandler FnAddDirectorsCompleted;
        
        /// <remarks/>
        public event FnApplyforTenderCompletedEventHandler FnApplyforTenderCompleted;
        
        /// <remarks/>
        public event FnCountOpenTendersCompletedEventHandler FnCountOpenTendersCompleted;
        
        /// <remarks/>
        public event FnCountAppliedTendersCompletedEventHandler FnCountAppliedTendersCompleted;
        
        /// <remarks/>
        public event FnCountTendersAwardedCompletedEventHandler FnCountTendersAwardedCompleted;
        
        /// <remarks/>
        public event FnApplyforOpenTenderCompletedEventHandler FnApplyforOpenTenderCompleted;
        
        /// <remarks/>
        public event FnInsertBlogCompletedEventHandler FnInsertBlogCompleted;
        
        /// <remarks/>
        public event FnInsertBlogReplyCompletedEventHandler FnInsertBlogReplyCompleted;
        
        /// <remarks/>
        public event FnChangePasswordCompletedEventHandler FnChangePasswordCompleted;
        
        /// <remarks/>
        public event FnEditProfileCompletedEventHandler FnEditProfileCompleted;
        
        /// <remarks/>
        public event FnResetPasswordCompletedEventHandler FnResetPasswordCompleted;
        
        /// <remarks/>
        public event FnGenerateVendorstatementCompletedEventHandler FnGenerateVendorstatementCompleted;
        
        /// <remarks/>
        public event FnGenerateRfQDocumentCompletedEventHandler FnGenerateRfQDocumentCompleted;
        
        /// <remarks/>
        public event FnAddPurchaseReqLineCompletedEventHandler FnAddPurchaseReqLineCompleted;
        
        /// <remarks/>
        public event FnReqforRegistrationCompletedEventHandler FnReqforRegistrationCompleted;
        
        /// <remarks/>
        public event FnBLOBRfQDocumentCompletedEventHandler FnBLOBRfQDocumentCompleted;
        
        /// <remarks/>
        public event FnDownloadRfQPTDocCompletedEventHandler FnDownloadRfQPTDocCompleted;
        
        /// <remarks/>
        public event FnSupplierRegistrationCompletedEventHandler FnSupplierRegistrationCompleted;
        
        /// <remarks/>
        public event FnInsertBankCompletedEventHandler FnInsertBankCompleted;
        
        /// <remarks/>
        public event FnDeleteBankCompletedEventHandler FnDeleteBankCompleted;
        
        /// <remarks/>
        public event FnInsertDirectorCompletedEventHandler FnInsertDirectorCompleted;
        
        /// <remarks/>
        public event FnInsertLitigationHCompletedEventHandler FnInsertLitigationHCompleted;
        
        /// <remarks/>
        public event FnInsertSpecialGrpCompletedEventHandler FnInsertSpecialGrpCompleted;
        
        /// <remarks/>
        public event FnInsertPastXepCompletedEventHandler FnInsertPastXepCompleted;
        
        /// <remarks/>
        public event FnInsertBalanceSheetCompletedEventHandler FnInsertBalanceSheetCompleted;
        
        /// <remarks/>
        public event FnInsertIncomestatementCompletedEventHandler FnInsertIncomestatementCompleted;
        
        /// <remarks/>
        public event FnInsertFiledetailsCompletedEventHandler FnInsertFiledetailsCompleted;
        
        /// <remarks/>
        public event FnInsertStaffEntryCompletedEventHandler FnInsertStaffEntryCompleted;
        
        /// <remarks/>
        public event FnInsertStaffQlfEntryCompletedEventHandler FnInsertStaffQlfEntryCompleted;
        
        /// <remarks/>
        public event FnInsertStaffXPrEntryCompletedEventHandler FnInsertStaffXPrEntryCompleted;
        
        /// <remarks/>
        public event FnCompleteSupplierRegCompletedEventHandler FnCompleteSupplierRegCompleted;
        
        /// <remarks/>
        public event FnGetOwnerPercentageCompletedEventHandler FnGetOwnerPercentageCompleted;
        
        /// <remarks/>
        public event FnInsertRFIresponseHeaderCompletedEventHandler FnInsertRFIresponseHeaderCompleted;
        
        /// <remarks/>
        public event FnGetLastDocumentNoCompletedEventHandler FnGetLastDocumentNoCompleted;
        
        /// <remarks/>
        public event FnInsertRFIResponseLinesCompletedEventHandler FnInsertRFIResponseLinesCompleted;
        
        /// <remarks/>
        public event FnSubmitResponseFinalCompletedEventHandler FnSubmitResponseFinalCompleted;
        
        /// <remarks/>
        public event FnInsertFiledetails_RfiCompletedEventHandler FnInsertFiledetails_RfiCompleted;
        
        /// <remarks/>
        public event FnSubmisionResponseStatusCompletedEventHandler FnSubmisionResponseStatusCompleted;
        
        /// <remarks/>
        public event FnGetEvalCritScoresCompletedEventHandler FnGetEvalCritScoresCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnRegisterVendor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnRegisterVendor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRegisterVendor(string vendorName, string supplierCategory, string country, string postAddress, string postCode, string phoneNumber, string emailAddress, string kraPin, string taxCompliance, string password, string confirmPassword) {
            object[] results = this.Invoke("FnRegisterVendor", new object[] {
                        vendorName,
                        supplierCategory,
                        country,
                        postAddress,
                        postCode,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        taxCompliance,
                        password,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRegisterVendorAsync(string vendorName, string supplierCategory, string country, string postAddress, string postCode, string phoneNumber, string emailAddress, string kraPin, string taxCompliance, string password, string confirmPassword) {
            this.FnRegisterVendorAsync(vendorName, supplierCategory, country, postAddress, postCode, phoneNumber, emailAddress, kraPin, taxCompliance, password, confirmPassword, null);
        }
        
        /// <remarks/>
        public void FnRegisterVendorAsync(string vendorName, string supplierCategory, string country, string postAddress, string postCode, string phoneNumber, string emailAddress, string kraPin, string taxCompliance, string password, string confirmPassword, object userState) {
            if ((this.FnRegisterVendorOperationCompleted == null)) {
                this.FnRegisterVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegisterVendorOperationCompleted);
            }
            this.InvokeAsync("FnRegisterVendor", new object[] {
                        vendorName,
                        supplierCategory,
                        country,
                        postAddress,
                        postCode,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        taxCompliance,
                        password,
                        confirmPassword}, this.FnRegisterVendorOperationCompleted, userState);
        }
        
        private void OnFnRegisterVendorOperationCompleted(object arg) {
            if ((this.FnRegisterVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegisterVendorCompleted(this, new FnRegisterVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:ResetPass", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="ResetPass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResetPass(string emailAddress) {
            object[] results = this.Invoke("ResetPass", new object[] {
                        emailAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPassAsync(string emailAddress) {
            this.ResetPassAsync(emailAddress, null);
        }
        
        /// <remarks/>
        public void ResetPassAsync(string emailAddress, object userState) {
            if ((this.ResetPassOperationCompleted == null)) {
                this.ResetPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPassOperationCompleted);
            }
            this.InvokeAsync("ResetPass", new object[] {
                        emailAddress}, this.ResetPassOperationCompleted, userState);
        }
        
        private void OnResetPassOperationCompleted(object arg) {
            if ((this.ResetPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPassCompleted(this, new ResetPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnApplyPreQualification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnApplyPreQualification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplyPreQualification(string contactNo, string supplierCategory) {
            object[] results = this.Invoke("FnApplyPreQualification", new object[] {
                        contactNo,
                        supplierCategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplyPreQualificationAsync(string contactNo, string supplierCategory) {
            this.FnApplyPreQualificationAsync(contactNo, supplierCategory, null);
        }
        
        /// <remarks/>
        public void FnApplyPreQualificationAsync(string contactNo, string supplierCategory, object userState) {
            if ((this.FnApplyPreQualificationOperationCompleted == null)) {
                this.FnApplyPreQualificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplyPreQualificationOperationCompleted);
            }
            this.InvokeAsync("FnApplyPreQualification", new object[] {
                        contactNo,
                        supplierCategory}, this.FnApplyPreQualificationOperationCompleted, userState);
        }
        
        private void OnFnApplyPreQualificationOperationCompleted(object arg) {
            if ((this.FnApplyPreQualificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplyPreQualificationCompleted(this, new FnApplyPreQualificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:GetCurrentYear", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="GetCurrentYear_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCurrentYear() {
            object[] results = this.Invoke("GetCurrentYear", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentYearAsync() {
            this.GetCurrentYearAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentYearAsync(object userState) {
            if ((this.GetCurrentYearOperationCompleted == null)) {
                this.GetCurrentYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentYearOperationCompleted);
            }
            this.InvokeAsync("GetCurrentYear", new object[0], this.GetCurrentYearOperationCompleted, userState);
        }
        
        private void OnGetCurrentYearOperationCompleted(object arg) {
            if ((this.GetCurrentYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentYearCompleted(this, new GetCurrentYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnApplyRFQ", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnApplyRFQ_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplyRFQ(string contactNo, decimal quantity, decimal amount, string rfqNo, string email, string vendorNo) {
            object[] results = this.Invoke("FnApplyRFQ", new object[] {
                        contactNo,
                        quantity,
                        amount,
                        rfqNo,
                        email,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplyRFQAsync(string contactNo, decimal quantity, decimal amount, string rfqNo, string email, string vendorNo) {
            this.FnApplyRFQAsync(contactNo, quantity, amount, rfqNo, email, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnApplyRFQAsync(string contactNo, decimal quantity, decimal amount, string rfqNo, string email, string vendorNo, object userState) {
            if ((this.FnApplyRFQOperationCompleted == null)) {
                this.FnApplyRFQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplyRFQOperationCompleted);
            }
            this.InvokeAsync("FnApplyRFQ", new object[] {
                        contactNo,
                        quantity,
                        amount,
                        rfqNo,
                        email,
                        vendorNo}, this.FnApplyRFQOperationCompleted, userState);
        }
        
        private void OnFnApplyRFQOperationCompleted(object arg) {
            if ((this.FnApplyRFQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplyRFQCompleted(this, new FnApplyRFQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:ApplyRFQOLD", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="ApplyRFQOLD_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyRFQOLD(string contactNo, string password, decimal quantity, decimal amount, string rfqNo) {
            object[] results = this.Invoke("ApplyRFQOLD", new object[] {
                        contactNo,
                        password,
                        quantity,
                        amount,
                        rfqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyRFQOLDAsync(string contactNo, string password, decimal quantity, decimal amount, string rfqNo) {
            this.ApplyRFQOLDAsync(contactNo, password, quantity, amount, rfqNo, null);
        }
        
        /// <remarks/>
        public void ApplyRFQOLDAsync(string contactNo, string password, decimal quantity, decimal amount, string rfqNo, object userState) {
            if ((this.ApplyRFQOLDOperationCompleted == null)) {
                this.ApplyRFQOLDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyRFQOLDOperationCompleted);
            }
            this.InvokeAsync("ApplyRFQOLD", new object[] {
                        contactNo,
                        password,
                        quantity,
                        amount,
                        rfqNo}, this.ApplyRFQOLDOperationCompleted, userState);
        }
        
        private void OnApplyRFQOLDOperationCompleted(object arg) {
            if ((this.ApplyRFQOLDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyRFQOLDCompleted(this, new ApplyRFQOLDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:SendEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="SendEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendEmail(string recipient, string title, string message) {
            object[] results = this.Invoke("SendEmail", new object[] {
                        recipient,
                        title,
                        message});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailAsync(string recipient, string title, string message) {
            this.SendEmailAsync(recipient, title, message, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(string recipient, string title, string message, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        recipient,
                        title,
                        message}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new SendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:ActivateAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="ActivateAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ActivateAccount(string userCode, string key, string password, string confirmpassword) {
            object[] results = this.Invoke("ActivateAccount", new object[] {
                        userCode,
                        key,
                        password,
                        confirmpassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateAccountAsync(string userCode, string key, string password, string confirmpassword) {
            this.ActivateAccountAsync(userCode, key, password, confirmpassword, null);
        }
        
        /// <remarks/>
        public void ActivateAccountAsync(string userCode, string key, string password, string confirmpassword, object userState) {
            if ((this.ActivateAccountOperationCompleted == null)) {
                this.ActivateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateAccountOperationCompleted);
            }
            this.InvokeAsync("ActivateAccount", new object[] {
                        userCode,
                        key,
                        password,
                        confirmpassword}, this.ActivateAccountOperationCompleted, userState);
        }
        
        private void OnActivateAccountOperationCompleted(object arg) {
            if ((this.ActivateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateAccountCompleted(this, new ActivateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnAddDirectors", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnAddDirectors_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddDirectors(string contactNo, string directorFullname) {
            object[] results = this.Invoke("FnAddDirectors", new object[] {
                        contactNo,
                        directorFullname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddDirectorsAsync(string contactNo, string directorFullname) {
            this.FnAddDirectorsAsync(contactNo, directorFullname, null);
        }
        
        /// <remarks/>
        public void FnAddDirectorsAsync(string contactNo, string directorFullname, object userState) {
            if ((this.FnAddDirectorsOperationCompleted == null)) {
                this.FnAddDirectorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddDirectorsOperationCompleted);
            }
            this.InvokeAsync("FnAddDirectors", new object[] {
                        contactNo,
                        directorFullname}, this.FnAddDirectorsOperationCompleted, userState);
        }
        
        private void OnFnAddDirectorsOperationCompleted(object arg) {
            if ((this.FnAddDirectorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddDirectorsCompleted(this, new FnAddDirectorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnApplyforTender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnApplyforTender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplyforTender(string tenderNo, string vendorNo, string email) {
            object[] results = this.Invoke("FnApplyforTender", new object[] {
                        tenderNo,
                        vendorNo,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplyforTenderAsync(string tenderNo, string vendorNo, string email) {
            this.FnApplyforTenderAsync(tenderNo, vendorNo, email, null);
        }
        
        /// <remarks/>
        public void FnApplyforTenderAsync(string tenderNo, string vendorNo, string email, object userState) {
            if ((this.FnApplyforTenderOperationCompleted == null)) {
                this.FnApplyforTenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplyforTenderOperationCompleted);
            }
            this.InvokeAsync("FnApplyforTender", new object[] {
                        tenderNo,
                        vendorNo,
                        email}, this.FnApplyforTenderOperationCompleted, userState);
        }
        
        private void OnFnApplyforTenderOperationCompleted(object arg) {
            if ((this.FnApplyforTenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplyforTenderCompleted(this, new FnApplyforTenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCountOpenTenders", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCountOpenTenders_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnCountOpenTenders() {
            object[] results = this.Invoke("FnCountOpenTenders", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnCountOpenTendersAsync() {
            this.FnCountOpenTendersAsync(null);
        }
        
        /// <remarks/>
        public void FnCountOpenTendersAsync(object userState) {
            if ((this.FnCountOpenTendersOperationCompleted == null)) {
                this.FnCountOpenTendersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCountOpenTendersOperationCompleted);
            }
            this.InvokeAsync("FnCountOpenTenders", new object[0], this.FnCountOpenTendersOperationCompleted, userState);
        }
        
        private void OnFnCountOpenTendersOperationCompleted(object arg) {
            if ((this.FnCountOpenTendersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCountOpenTendersCompleted(this, new FnCountOpenTendersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCountAppliedTenders", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCountAppliedTenders_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnCountAppliedTenders(string vendorNo) {
            object[] results = this.Invoke("FnCountAppliedTenders", new object[] {
                        vendorNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnCountAppliedTendersAsync(string vendorNo) {
            this.FnCountAppliedTendersAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void FnCountAppliedTendersAsync(string vendorNo, object userState) {
            if ((this.FnCountAppliedTendersOperationCompleted == null)) {
                this.FnCountAppliedTendersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCountAppliedTendersOperationCompleted);
            }
            this.InvokeAsync("FnCountAppliedTenders", new object[] {
                        vendorNo}, this.FnCountAppliedTendersOperationCompleted, userState);
        }
        
        private void OnFnCountAppliedTendersOperationCompleted(object arg) {
            if ((this.FnCountAppliedTendersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCountAppliedTendersCompleted(this, new FnCountAppliedTendersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCountTendersAwarded", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCountTendersAwarded_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnCountTendersAwarded(string vendorNo) {
            object[] results = this.Invoke("FnCountTendersAwarded", new object[] {
                        vendorNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnCountTendersAwardedAsync(string vendorNo) {
            this.FnCountTendersAwardedAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void FnCountTendersAwardedAsync(string vendorNo, object userState) {
            if ((this.FnCountTendersAwardedOperationCompleted == null)) {
                this.FnCountTendersAwardedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCountTendersAwardedOperationCompleted);
            }
            this.InvokeAsync("FnCountTendersAwarded", new object[] {
                        vendorNo}, this.FnCountTendersAwardedOperationCompleted, userState);
        }
        
        private void OnFnCountTendersAwardedOperationCompleted(object arg) {
            if ((this.FnCountTendersAwardedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCountTendersAwardedCompleted(this, new FnCountTendersAwardedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnApplyforOpenTender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnApplyforOpenTender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplyforOpenTender(string tenderNo, decimal amount, string contactNo, string email) {
            object[] results = this.Invoke("FnApplyforOpenTender", new object[] {
                        tenderNo,
                        amount,
                        contactNo,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplyforOpenTenderAsync(string tenderNo, decimal amount, string contactNo, string email) {
            this.FnApplyforOpenTenderAsync(tenderNo, amount, contactNo, email, null);
        }
        
        /// <remarks/>
        public void FnApplyforOpenTenderAsync(string tenderNo, decimal amount, string contactNo, string email, object userState) {
            if ((this.FnApplyforOpenTenderOperationCompleted == null)) {
                this.FnApplyforOpenTenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplyforOpenTenderOperationCompleted);
            }
            this.InvokeAsync("FnApplyforOpenTender", new object[] {
                        tenderNo,
                        amount,
                        contactNo,
                        email}, this.FnApplyforOpenTenderOperationCompleted, userState);
        }
        
        private void OnFnApplyforOpenTenderOperationCompleted(object arg) {
            if ((this.FnApplyforOpenTenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplyforOpenTenderCompleted(this, new FnApplyforOpenTenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBlog", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBlog_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBlog(string blogTitle, string blogBody, string dirNo, string dirName) {
            object[] results = this.Invoke("FnInsertBlog", new object[] {
                        blogTitle,
                        blogBody,
                        dirNo,
                        dirName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBlogAsync(string blogTitle, string blogBody, string dirNo, string dirName) {
            this.FnInsertBlogAsync(blogTitle, blogBody, dirNo, dirName, null);
        }
        
        /// <remarks/>
        public void FnInsertBlogAsync(string blogTitle, string blogBody, string dirNo, string dirName, object userState) {
            if ((this.FnInsertBlogOperationCompleted == null)) {
                this.FnInsertBlogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBlogOperationCompleted);
            }
            this.InvokeAsync("FnInsertBlog", new object[] {
                        blogTitle,
                        blogBody,
                        dirNo,
                        dirName}, this.FnInsertBlogOperationCompleted, userState);
        }
        
        private void OnFnInsertBlogOperationCompleted(object arg) {
            if ((this.FnInsertBlogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBlogCompleted(this, new FnInsertBlogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBlogReply", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBlogReply_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBlogReply(string blogReply, string dirNo, string dirName, int blogId) {
            object[] results = this.Invoke("FnInsertBlogReply", new object[] {
                        blogReply,
                        dirNo,
                        dirName,
                        blogId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBlogReplyAsync(string blogReply, string dirNo, string dirName, int blogId) {
            this.FnInsertBlogReplyAsync(blogReply, dirNo, dirName, blogId, null);
        }
        
        /// <remarks/>
        public void FnInsertBlogReplyAsync(string blogReply, string dirNo, string dirName, int blogId, object userState) {
            if ((this.FnInsertBlogReplyOperationCompleted == null)) {
                this.FnInsertBlogReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBlogReplyOperationCompleted);
            }
            this.InvokeAsync("FnInsertBlogReply", new object[] {
                        blogReply,
                        dirNo,
                        dirName,
                        blogId}, this.FnInsertBlogReplyOperationCompleted, userState);
        }
        
        private void OnFnInsertBlogReplyOperationCompleted(object arg) {
            if ((this.FnInsertBlogReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBlogReplyCompleted(this, new FnInsertBlogReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnChangePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnChangePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnChangePassword(string customerNo, string currentPassword, string newPassword, string confirmNewPassword) {
            object[] results = this.Invoke("FnChangePassword", new object[] {
                        customerNo,
                        currentPassword,
                        newPassword,
                        confirmNewPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnChangePasswordAsync(string customerNo, string currentPassword, string newPassword, string confirmNewPassword) {
            this.FnChangePasswordAsync(customerNo, currentPassword, newPassword, confirmNewPassword, null);
        }
        
        /// <remarks/>
        public void FnChangePasswordAsync(string customerNo, string currentPassword, string newPassword, string confirmNewPassword, object userState) {
            if ((this.FnChangePasswordOperationCompleted == null)) {
                this.FnChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("FnChangePassword", new object[] {
                        customerNo,
                        currentPassword,
                        newPassword,
                        confirmNewPassword}, this.FnChangePasswordOperationCompleted, userState);
        }
        
        private void OnFnChangePasswordOperationCompleted(object arg) {
            if ((this.FnChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnChangePasswordCompleted(this, new FnChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnEditProfile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnEditProfile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditProfile(string email, string fullname, string kraPin, string taxtPin, string phoneNo) {
            object[] results = this.Invoke("FnEditProfile", new object[] {
                        email,
                        fullname,
                        kraPin,
                        taxtPin,
                        phoneNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditProfileAsync(string email, string fullname, string kraPin, string taxtPin, string phoneNo) {
            this.FnEditProfileAsync(email, fullname, kraPin, taxtPin, phoneNo, null);
        }
        
        /// <remarks/>
        public void FnEditProfileAsync(string email, string fullname, string kraPin, string taxtPin, string phoneNo, object userState) {
            if ((this.FnEditProfileOperationCompleted == null)) {
                this.FnEditProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditProfileOperationCompleted);
            }
            this.InvokeAsync("FnEditProfile", new object[] {
                        email,
                        fullname,
                        kraPin,
                        taxtPin,
                        phoneNo}, this.FnEditProfileOperationCompleted, userState);
        }
        
        private void OnFnEditProfileOperationCompleted(object arg) {
            if ((this.FnEditProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditProfileCompleted(this, new FnEditProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnResetPassword(string email, string newPassword) {
            object[] results = this.Invoke("FnResetPassword", new object[] {
                        email,
                        newPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string email, string newPassword) {
            this.FnResetPasswordAsync(email, newPassword, null);
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string email, string newPassword, object userState) {
            if ((this.FnResetPasswordOperationCompleted == null)) {
                this.FnResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("FnResetPassword", new object[] {
                        email,
                        newPassword}, this.FnResetPasswordOperationCompleted, userState);
        }
        
        private void OnFnResetPasswordOperationCompleted(object arg) {
            if ((this.FnResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnResetPasswordCompleted(this, new FnResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGenerateVendorstatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGenerateVendorstatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateVendorstatement(string vendorNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            object[] results = this.Invoke("FnGenerateVendorstatement", new object[] {
                        vendorNo,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateVendorstatementAsync(string vendorNo, System.DateTime startDate, System.DateTime endDate) {
            this.FnGenerateVendorstatementAsync(vendorNo, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void FnGenerateVendorstatementAsync(string vendorNo, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.FnGenerateVendorstatementOperationCompleted == null)) {
                this.FnGenerateVendorstatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateVendorstatementOperationCompleted);
            }
            this.InvokeAsync("FnGenerateVendorstatement", new object[] {
                        vendorNo,
                        startDate,
                        endDate}, this.FnGenerateVendorstatementOperationCompleted, userState);
        }
        
        private void OnFnGenerateVendorstatementOperationCompleted(object arg) {
            if ((this.FnGenerateVendorstatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateVendorstatementCompleted(this, new FnGenerateVendorstatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGenerateRfQDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGenerateRfQDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateRfQDocument(string vendorNo, string rfQNo) {
            object[] results = this.Invoke("FnGenerateRfQDocument", new object[] {
                        vendorNo,
                        rfQNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateRfQDocumentAsync(string vendorNo, string rfQNo) {
            this.FnGenerateRfQDocumentAsync(vendorNo, rfQNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateRfQDocumentAsync(string vendorNo, string rfQNo, object userState) {
            if ((this.FnGenerateRfQDocumentOperationCompleted == null)) {
                this.FnGenerateRfQDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateRfQDocumentOperationCompleted);
            }
            this.InvokeAsync("FnGenerateRfQDocument", new object[] {
                        vendorNo,
                        rfQNo}, this.FnGenerateRfQDocumentOperationCompleted, userState);
        }
        
        private void OnFnGenerateRfQDocumentOperationCompleted(object arg) {
            if ((this.FnGenerateRfQDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateRfQDocumentCompleted(this, new FnGenerateRfQDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnAddPurchaseReqLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnAddPurchaseReqLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddPurchaseReqLine(string reqNo, string itemNo, decimal quantity, decimal unitPrice, string vendorNo, int lineNo, int type) {
            object[] results = this.Invoke("FnAddPurchaseReqLine", new object[] {
                        reqNo,
                        itemNo,
                        quantity,
                        unitPrice,
                        vendorNo,
                        lineNo,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddPurchaseReqLineAsync(string reqNo, string itemNo, decimal quantity, decimal unitPrice, string vendorNo, int lineNo, int type) {
            this.FnAddPurchaseReqLineAsync(reqNo, itemNo, quantity, unitPrice, vendorNo, lineNo, type, null);
        }
        
        /// <remarks/>
        public void FnAddPurchaseReqLineAsync(string reqNo, string itemNo, decimal quantity, decimal unitPrice, string vendorNo, int lineNo, int type, object userState) {
            if ((this.FnAddPurchaseReqLineOperationCompleted == null)) {
                this.FnAddPurchaseReqLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddPurchaseReqLineOperationCompleted);
            }
            this.InvokeAsync("FnAddPurchaseReqLine", new object[] {
                        reqNo,
                        itemNo,
                        quantity,
                        unitPrice,
                        vendorNo,
                        lineNo,
                        type}, this.FnAddPurchaseReqLineOperationCompleted, userState);
        }
        
        private void OnFnAddPurchaseReqLineOperationCompleted(object arg) {
            if ((this.FnAddPurchaseReqLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddPurchaseReqLineCompleted(this, new FnAddPurchaseReqLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnReqforRegistration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnReqforRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnReqforRegistration(string registeredBusinessName, string phoneNumber, string emailAddress, string taxRegkraPin, string contactName) {
            object[] results = this.Invoke("FnReqforRegistration", new object[] {
                        registeredBusinessName,
                        phoneNumber,
                        emailAddress,
                        taxRegkraPin,
                        contactName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnReqforRegistrationAsync(string registeredBusinessName, string phoneNumber, string emailAddress, string taxRegkraPin, string contactName) {
            this.FnReqforRegistrationAsync(registeredBusinessName, phoneNumber, emailAddress, taxRegkraPin, contactName, null);
        }
        
        /// <remarks/>
        public void FnReqforRegistrationAsync(string registeredBusinessName, string phoneNumber, string emailAddress, string taxRegkraPin, string contactName, object userState) {
            if ((this.FnReqforRegistrationOperationCompleted == null)) {
                this.FnReqforRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnReqforRegistrationOperationCompleted);
            }
            this.InvokeAsync("FnReqforRegistration", new object[] {
                        registeredBusinessName,
                        phoneNumber,
                        emailAddress,
                        taxRegkraPin,
                        contactName}, this.FnReqforRegistrationOperationCompleted, userState);
        }
        
        private void OnFnReqforRegistrationOperationCompleted(object arg) {
            if ((this.FnReqforRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnReqforRegistrationCompleted(this, new FnReqforRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnBLOBRfQDocument", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnBLOBRfQDocument_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnBLOBRfQDocument(string vendorname, string rFQNo, ref string bigText) {
            object[] results = this.Invoke("FnBLOBRfQDocument", new object[] {
                        vendorname,
                        rFQNo,
                        bigText});
            bigText = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnBLOBRfQDocumentAsync(string vendorname, string rFQNo, string bigText) {
            this.FnBLOBRfQDocumentAsync(vendorname, rFQNo, bigText, null);
        }
        
        /// <remarks/>
        public void FnBLOBRfQDocumentAsync(string vendorname, string rFQNo, string bigText, object userState) {
            if ((this.FnBLOBRfQDocumentOperationCompleted == null)) {
                this.FnBLOBRfQDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnBLOBRfQDocumentOperationCompleted);
            }
            this.InvokeAsync("FnBLOBRfQDocument", new object[] {
                        vendorname,
                        rFQNo,
                        bigText}, this.FnBLOBRfQDocumentOperationCompleted, userState);
        }
        
        private void OnFnBLOBRfQDocumentOperationCompleted(object arg) {
            if ((this.FnBLOBRfQDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnBLOBRfQDocumentCompleted(this, new FnBLOBRfQDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDownloadRfQPTDoc", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDownloadRfQPTDoc_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDownloadRfQPTDoc() {
            this.Invoke("FnDownloadRfQPTDoc", new object[0]);
        }
        
        /// <remarks/>
        public void FnDownloadRfQPTDocAsync() {
            this.FnDownloadRfQPTDocAsync(null);
        }
        
        /// <remarks/>
        public void FnDownloadRfQPTDocAsync(object userState) {
            if ((this.FnDownloadRfQPTDocOperationCompleted == null)) {
                this.FnDownloadRfQPTDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDownloadRfQPTDocOperationCompleted);
            }
            this.InvokeAsync("FnDownloadRfQPTDoc", new object[0], this.FnDownloadRfQPTDocOperationCompleted, userState);
        }
        
        private void OnFnDownloadRfQPTDocOperationCompleted(object arg) {
            if ((this.FnDownloadRfQPTDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDownloadRfQPTDocCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSupplierRegistration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSupplierRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSupplierRegistration(
                    string businessType, 
                    int vendorType, 
                    int ownershipType, 
                    string industryGroup, 
                    string postacode, 
                    string countryofOrigin, 
                    string companysize, 
                    decimal nominalCap, 
                    int dealerType, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofIncorporation, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofOps, 
                    string languageCode, 
                    string vision, 
                    string mision, 
                    string poAddress, 
                    string locationAddress, 
                    string postaCity, 
                    string webUrl, 
                    string telephoneNo, 
                    string buildingNo, 
                    string floorNo, 
                    string plotNo, 
                    string streetorRoad, 
                    string faxNo, 
                    decimal maxbizvalue, 
                    string mobileNo, 
                    string natureofBiz, 
                    string vendorNo, 
                    string certofIncopNo) {
            object[] results = this.Invoke("FnSupplierRegistration", new object[] {
                        businessType,
                        vendorType,
                        ownershipType,
                        industryGroup,
                        postacode,
                        countryofOrigin,
                        companysize,
                        nominalCap,
                        dealerType,
                        dateofIncorporation,
                        dateofOps,
                        languageCode,
                        vision,
                        mision,
                        poAddress,
                        locationAddress,
                        postaCity,
                        webUrl,
                        telephoneNo,
                        buildingNo,
                        floorNo,
                        plotNo,
                        streetorRoad,
                        faxNo,
                        maxbizvalue,
                        mobileNo,
                        natureofBiz,
                        vendorNo,
                        certofIncopNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSupplierRegistrationAsync(
                    string businessType, 
                    int vendorType, 
                    int ownershipType, 
                    string industryGroup, 
                    string postacode, 
                    string countryofOrigin, 
                    string companysize, 
                    decimal nominalCap, 
                    int dealerType, 
                    System.DateTime dateofIncorporation, 
                    System.DateTime dateofOps, 
                    string languageCode, 
                    string vision, 
                    string mision, 
                    string poAddress, 
                    string locationAddress, 
                    string postaCity, 
                    string webUrl, 
                    string telephoneNo, 
                    string buildingNo, 
                    string floorNo, 
                    string plotNo, 
                    string streetorRoad, 
                    string faxNo, 
                    decimal maxbizvalue, 
                    string mobileNo, 
                    string natureofBiz, 
                    string vendorNo, 
                    string certofIncopNo) {
            this.FnSupplierRegistrationAsync(businessType, vendorType, ownershipType, industryGroup, postacode, countryofOrigin, companysize, nominalCap, dealerType, dateofIncorporation, dateofOps, languageCode, vision, mision, poAddress, locationAddress, postaCity, webUrl, telephoneNo, buildingNo, floorNo, plotNo, streetorRoad, faxNo, maxbizvalue, mobileNo, natureofBiz, vendorNo, certofIncopNo, null);
        }
        
        /// <remarks/>
        public void FnSupplierRegistrationAsync(
                    string businessType, 
                    int vendorType, 
                    int ownershipType, 
                    string industryGroup, 
                    string postacode, 
                    string countryofOrigin, 
                    string companysize, 
                    decimal nominalCap, 
                    int dealerType, 
                    System.DateTime dateofIncorporation, 
                    System.DateTime dateofOps, 
                    string languageCode, 
                    string vision, 
                    string mision, 
                    string poAddress, 
                    string locationAddress, 
                    string postaCity, 
                    string webUrl, 
                    string telephoneNo, 
                    string buildingNo, 
                    string floorNo, 
                    string plotNo, 
                    string streetorRoad, 
                    string faxNo, 
                    decimal maxbizvalue, 
                    string mobileNo, 
                    string natureofBiz, 
                    string vendorNo, 
                    string certofIncopNo, 
                    object userState) {
            if ((this.FnSupplierRegistrationOperationCompleted == null)) {
                this.FnSupplierRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSupplierRegistrationOperationCompleted);
            }
            this.InvokeAsync("FnSupplierRegistration", new object[] {
                        businessType,
                        vendorType,
                        ownershipType,
                        industryGroup,
                        postacode,
                        countryofOrigin,
                        companysize,
                        nominalCap,
                        dealerType,
                        dateofIncorporation,
                        dateofOps,
                        languageCode,
                        vision,
                        mision,
                        poAddress,
                        locationAddress,
                        postaCity,
                        webUrl,
                        telephoneNo,
                        buildingNo,
                        floorNo,
                        plotNo,
                        streetorRoad,
                        faxNo,
                        maxbizvalue,
                        mobileNo,
                        natureofBiz,
                        vendorNo,
                        certofIncopNo}, this.FnSupplierRegistrationOperationCompleted, userState);
        }
        
        private void OnFnSupplierRegistrationOperationCompleted(object arg) {
            if ((this.FnSupplierRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSupplierRegistrationCompleted(this, new FnSupplierRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBank", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBank_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBank(string vendorNo, string bankCode, string bankName, string currencyCode, string bankAccountNo) {
            object[] results = this.Invoke("FnInsertBank", new object[] {
                        vendorNo,
                        bankCode,
                        bankName,
                        currencyCode,
                        bankAccountNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBankAsync(string vendorNo, string bankCode, string bankName, string currencyCode, string bankAccountNo) {
            this.FnInsertBankAsync(vendorNo, bankCode, bankName, currencyCode, bankAccountNo, null);
        }
        
        /// <remarks/>
        public void FnInsertBankAsync(string vendorNo, string bankCode, string bankName, string currencyCode, string bankAccountNo, object userState) {
            if ((this.FnInsertBankOperationCompleted == null)) {
                this.FnInsertBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBankOperationCompleted);
            }
            this.InvokeAsync("FnInsertBank", new object[] {
                        vendorNo,
                        bankCode,
                        bankName,
                        currencyCode,
                        bankAccountNo}, this.FnInsertBankOperationCompleted, userState);
        }
        
        private void OnFnInsertBankOperationCompleted(object arg) {
            if ((this.FnInsertBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBankCompleted(this, new FnInsertBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnDeleteBank", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnDeleteBank_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteBank(string vendorNo, string bankCode, string bankName, string currencyCode, string bankAccountNo) {
            object[] results = this.Invoke("FnDeleteBank", new object[] {
                        vendorNo,
                        bankCode,
                        bankName,
                        currencyCode,
                        bankAccountNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteBankAsync(string vendorNo, string bankCode, string bankName, string currencyCode, string bankAccountNo) {
            this.FnDeleteBankAsync(vendorNo, bankCode, bankName, currencyCode, bankAccountNo, null);
        }
        
        /// <remarks/>
        public void FnDeleteBankAsync(string vendorNo, string bankCode, string bankName, string currencyCode, string bankAccountNo, object userState) {
            if ((this.FnDeleteBankOperationCompleted == null)) {
                this.FnDeleteBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteBankOperationCompleted);
            }
            this.InvokeAsync("FnDeleteBank", new object[] {
                        vendorNo,
                        bankCode,
                        bankName,
                        currencyCode,
                        bankAccountNo}, this.FnDeleteBankOperationCompleted, userState);
        }
        
        private void OnFnDeleteBankOperationCompleted(object arg) {
            if ((this.FnDeleteBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteBankCompleted(this, new FnDeleteBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertDirector", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertDirector_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertDirector(string vendorNo, string phoneNo, decimal ownershippercentage, string country, string email, string address, string directorFullname, string idNumber, int citizenType) {
            object[] results = this.Invoke("FnInsertDirector", new object[] {
                        vendorNo,
                        phoneNo,
                        ownershippercentage,
                        country,
                        email,
                        address,
                        directorFullname,
                        idNumber,
                        citizenType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertDirectorAsync(string vendorNo, string phoneNo, decimal ownershippercentage, string country, string email, string address, string directorFullname, string idNumber, int citizenType) {
            this.FnInsertDirectorAsync(vendorNo, phoneNo, ownershippercentage, country, email, address, directorFullname, idNumber, citizenType, null);
        }
        
        /// <remarks/>
        public void FnInsertDirectorAsync(string vendorNo, string phoneNo, decimal ownershippercentage, string country, string email, string address, string directorFullname, string idNumber, int citizenType, object userState) {
            if ((this.FnInsertDirectorOperationCompleted == null)) {
                this.FnInsertDirectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertDirectorOperationCompleted);
            }
            this.InvokeAsync("FnInsertDirector", new object[] {
                        vendorNo,
                        phoneNo,
                        ownershippercentage,
                        country,
                        email,
                        address,
                        directorFullname,
                        idNumber,
                        citizenType}, this.FnInsertDirectorOperationCompleted, userState);
        }
        
        private void OnFnInsertDirectorOperationCompleted(object arg) {
            if ((this.FnInsertDirectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertDirectorCompleted(this, new FnInsertDirectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertLitigationH", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertLitigationH_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertLitigationH(string vendorNo, string disputeDescription, int categoryofDispute, string year, string theotherDisputeparty, decimal disputeAmount, int awardType) {
            object[] results = this.Invoke("FnInsertLitigationH", new object[] {
                        vendorNo,
                        disputeDescription,
                        categoryofDispute,
                        year,
                        theotherDisputeparty,
                        disputeAmount,
                        awardType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertLitigationHAsync(string vendorNo, string disputeDescription, int categoryofDispute, string year, string theotherDisputeparty, decimal disputeAmount, int awardType) {
            this.FnInsertLitigationHAsync(vendorNo, disputeDescription, categoryofDispute, year, theotherDisputeparty, disputeAmount, awardType, null);
        }
        
        /// <remarks/>
        public void FnInsertLitigationHAsync(string vendorNo, string disputeDescription, int categoryofDispute, string year, string theotherDisputeparty, decimal disputeAmount, int awardType, object userState) {
            if ((this.FnInsertLitigationHOperationCompleted == null)) {
                this.FnInsertLitigationHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertLitigationHOperationCompleted);
            }
            this.InvokeAsync("FnInsertLitigationH", new object[] {
                        vendorNo,
                        disputeDescription,
                        categoryofDispute,
                        year,
                        theotherDisputeparty,
                        disputeAmount,
                        awardType}, this.FnInsertLitigationHOperationCompleted, userState);
        }
        
        private void OnFnInsertLitigationHOperationCompleted(object arg) {
            if ((this.FnInsertLitigationHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertLitigationHCompleted(this, new FnInsertLitigationHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertSpecialGrp", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertSpecialGrp_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertSpecialGrp(string vendoNo, string specialGrpcatg, string certficateNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime certeffectiveDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime certXpiryDate, string prodservCategory) {
            object[] results = this.Invoke("FnInsertSpecialGrp", new object[] {
                        vendoNo,
                        specialGrpcatg,
                        certficateNo,
                        certeffectiveDate,
                        certXpiryDate,
                        prodservCategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertSpecialGrpAsync(string vendoNo, string specialGrpcatg, string certficateNo, System.DateTime certeffectiveDate, System.DateTime certXpiryDate, string prodservCategory) {
            this.FnInsertSpecialGrpAsync(vendoNo, specialGrpcatg, certficateNo, certeffectiveDate, certXpiryDate, prodservCategory, null);
        }
        
        /// <remarks/>
        public void FnInsertSpecialGrpAsync(string vendoNo, string specialGrpcatg, string certficateNo, System.DateTime certeffectiveDate, System.DateTime certXpiryDate, string prodservCategory, object userState) {
            if ((this.FnInsertSpecialGrpOperationCompleted == null)) {
                this.FnInsertSpecialGrpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertSpecialGrpOperationCompleted);
            }
            this.InvokeAsync("FnInsertSpecialGrp", new object[] {
                        vendoNo,
                        specialGrpcatg,
                        certficateNo,
                        certeffectiveDate,
                        certXpiryDate,
                        prodservCategory}, this.FnInsertSpecialGrpOperationCompleted, userState);
        }
        
        private void OnFnInsertSpecialGrpOperationCompleted(object arg) {
            if ((this.FnInsertSpecialGrpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertSpecialGrpCompleted(this, new FnInsertSpecialGrpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertPastXep", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertPastXep_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPastXep(string vendorNo, string clientName, string address, string assignmentProject, string projectScope, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime projectStartDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime projectEndDate, decimal projectValue) {
            object[] results = this.Invoke("FnInsertPastXep", new object[] {
                        vendorNo,
                        clientName,
                        address,
                        assignmentProject,
                        projectScope,
                        projectStartDate,
                        projectEndDate,
                        projectValue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPastXepAsync(string vendorNo, string clientName, string address, string assignmentProject, string projectScope, System.DateTime projectStartDate, System.DateTime projectEndDate, decimal projectValue) {
            this.FnInsertPastXepAsync(vendorNo, clientName, address, assignmentProject, projectScope, projectStartDate, projectEndDate, projectValue, null);
        }
        
        /// <remarks/>
        public void FnInsertPastXepAsync(string vendorNo, string clientName, string address, string assignmentProject, string projectScope, System.DateTime projectStartDate, System.DateTime projectEndDate, decimal projectValue, object userState) {
            if ((this.FnInsertPastXepOperationCompleted == null)) {
                this.FnInsertPastXepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPastXepOperationCompleted);
            }
            this.InvokeAsync("FnInsertPastXep", new object[] {
                        vendorNo,
                        clientName,
                        address,
                        assignmentProject,
                        projectScope,
                        projectStartDate,
                        projectEndDate,
                        projectValue}, this.FnInsertPastXepOperationCompleted, userState);
        }
        
        private void OnFnInsertPastXepOperationCompleted(object arg) {
            if ((this.FnInsertPastXepCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPastXepCompleted(this, new FnInsertPastXepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertBalanceSheet", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertBalanceSheet_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBalanceSheet(string yearCode, decimal totalCurrentAssets, decimal totalFixedAssets, decimal totalCurrentLiability, decimal totalLongtermliabilty, decimal totalOwnersequity, string vendorNo) {
            object[] results = this.Invoke("FnInsertBalanceSheet", new object[] {
                        yearCode,
                        totalCurrentAssets,
                        totalFixedAssets,
                        totalCurrentLiability,
                        totalLongtermliabilty,
                        totalOwnersequity,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBalanceSheetAsync(string yearCode, decimal totalCurrentAssets, decimal totalFixedAssets, decimal totalCurrentLiability, decimal totalLongtermliabilty, decimal totalOwnersequity, string vendorNo) {
            this.FnInsertBalanceSheetAsync(yearCode, totalCurrentAssets, totalFixedAssets, totalCurrentLiability, totalLongtermliabilty, totalOwnersequity, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnInsertBalanceSheetAsync(string yearCode, decimal totalCurrentAssets, decimal totalFixedAssets, decimal totalCurrentLiability, decimal totalLongtermliabilty, decimal totalOwnersequity, string vendorNo, object userState) {
            if ((this.FnInsertBalanceSheetOperationCompleted == null)) {
                this.FnInsertBalanceSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBalanceSheetOperationCompleted);
            }
            this.InvokeAsync("FnInsertBalanceSheet", new object[] {
                        yearCode,
                        totalCurrentAssets,
                        totalFixedAssets,
                        totalCurrentLiability,
                        totalLongtermliabilty,
                        totalOwnersequity,
                        vendorNo}, this.FnInsertBalanceSheetOperationCompleted, userState);
        }
        
        private void OnFnInsertBalanceSheetOperationCompleted(object arg) {
            if ((this.FnInsertBalanceSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBalanceSheetCompleted(this, new FnInsertBalanceSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertIncomestatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertIncomestatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertIncomestatement(string yearCode, decimal totalRevenue, decimal totaCostofsoldgoods, decimal totaOperatingexpenses, decimal othernoneOperevenue, decimal interestExpense, string vendorNo) {
            object[] results = this.Invoke("FnInsertIncomestatement", new object[] {
                        yearCode,
                        totalRevenue,
                        totaCostofsoldgoods,
                        totaOperatingexpenses,
                        othernoneOperevenue,
                        interestExpense,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertIncomestatementAsync(string yearCode, decimal totalRevenue, decimal totaCostofsoldgoods, decimal totaOperatingexpenses, decimal othernoneOperevenue, decimal interestExpense, string vendorNo) {
            this.FnInsertIncomestatementAsync(yearCode, totalRevenue, totaCostofsoldgoods, totaOperatingexpenses, othernoneOperevenue, interestExpense, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnInsertIncomestatementAsync(string yearCode, decimal totalRevenue, decimal totaCostofsoldgoods, decimal totaOperatingexpenses, decimal othernoneOperevenue, decimal interestExpense, string vendorNo, object userState) {
            if ((this.FnInsertIncomestatementOperationCompleted == null)) {
                this.FnInsertIncomestatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertIncomestatementOperationCompleted);
            }
            this.InvokeAsync("FnInsertIncomestatement", new object[] {
                        yearCode,
                        totalRevenue,
                        totaCostofsoldgoods,
                        totaOperatingexpenses,
                        othernoneOperevenue,
                        interestExpense,
                        vendorNo}, this.FnInsertIncomestatementOperationCompleted, userState);
        }
        
        private void OnFnInsertIncomestatementOperationCompleted(object arg) {
            if ((this.FnInsertIncomestatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertIncomestatementCompleted(this, new FnInsertIncomestatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertFiledetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertFiledetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertFiledetails(string vendorNo, string procDoctype, string docdescription, string certNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime issuedDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expiryDate, string fileName) {
            object[] results = this.Invoke("FnInsertFiledetails", new object[] {
                        vendorNo,
                        procDoctype,
                        docdescription,
                        certNo,
                        issuedDate,
                        expiryDate,
                        fileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertFiledetailsAsync(string vendorNo, string procDoctype, string docdescription, string certNo, System.DateTime issuedDate, System.DateTime expiryDate, string fileName) {
            this.FnInsertFiledetailsAsync(vendorNo, procDoctype, docdescription, certNo, issuedDate, expiryDate, fileName, null);
        }
        
        /// <remarks/>
        public void FnInsertFiledetailsAsync(string vendorNo, string procDoctype, string docdescription, string certNo, System.DateTime issuedDate, System.DateTime expiryDate, string fileName, object userState) {
            if ((this.FnInsertFiledetailsOperationCompleted == null)) {
                this.FnInsertFiledetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertFiledetailsOperationCompleted);
            }
            this.InvokeAsync("FnInsertFiledetails", new object[] {
                        vendorNo,
                        procDoctype,
                        docdescription,
                        certNo,
                        issuedDate,
                        expiryDate,
                        fileName}, this.FnInsertFiledetailsOperationCompleted, userState);
        }
        
        private void OnFnInsertFiledetailsOperationCompleted(object arg) {
            if ((this.FnInsertFiledetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertFiledetailsCompleted(this, new FnInsertFiledetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertStaffEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertStaffEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStaffEntry(string vendorNo, string staffName, string profession, string designation, string phoneNumber, string nationality, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofBirth, string email, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime joiningDate, decimal yearsWithFirm, string staffNumber) {
            object[] results = this.Invoke("FnInsertStaffEntry", new object[] {
                        vendorNo,
                        staffName,
                        profession,
                        designation,
                        phoneNumber,
                        nationality,
                        dateofBirth,
                        email,
                        joiningDate,
                        yearsWithFirm,
                        staffNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStaffEntryAsync(string vendorNo, string staffName, string profession, string designation, string phoneNumber, string nationality, System.DateTime dateofBirth, string email, System.DateTime joiningDate, decimal yearsWithFirm, string staffNumber) {
            this.FnInsertStaffEntryAsync(vendorNo, staffName, profession, designation, phoneNumber, nationality, dateofBirth, email, joiningDate, yearsWithFirm, staffNumber, null);
        }
        
        /// <remarks/>
        public void FnInsertStaffEntryAsync(string vendorNo, string staffName, string profession, string designation, string phoneNumber, string nationality, System.DateTime dateofBirth, string email, System.DateTime joiningDate, decimal yearsWithFirm, string staffNumber, object userState) {
            if ((this.FnInsertStaffEntryOperationCompleted == null)) {
                this.FnInsertStaffEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStaffEntryOperationCompleted);
            }
            this.InvokeAsync("FnInsertStaffEntry", new object[] {
                        vendorNo,
                        staffName,
                        profession,
                        designation,
                        phoneNumber,
                        nationality,
                        dateofBirth,
                        email,
                        joiningDate,
                        yearsWithFirm,
                        staffNumber}, this.FnInsertStaffEntryOperationCompleted, userState);
        }
        
        private void OnFnInsertStaffEntryOperationCompleted(object arg) {
            if ((this.FnInsertStaffEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStaffEntryCompleted(this, new FnInsertStaffEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertStaffQlfEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertStaffQlfEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStaffQlfEntry(string vendorNo, string staffNIDorNumber, int qualifCategory, string qualifcName, string institution, string startYear, string endYear, string outstandingAchievement) {
            object[] results = this.Invoke("FnInsertStaffQlfEntry", new object[] {
                        vendorNo,
                        staffNIDorNumber,
                        qualifCategory,
                        qualifcName,
                        institution,
                        startYear,
                        endYear,
                        outstandingAchievement});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStaffQlfEntryAsync(string vendorNo, string staffNIDorNumber, int qualifCategory, string qualifcName, string institution, string startYear, string endYear, string outstandingAchievement) {
            this.FnInsertStaffQlfEntryAsync(vendorNo, staffNIDorNumber, qualifCategory, qualifcName, institution, startYear, endYear, outstandingAchievement, null);
        }
        
        /// <remarks/>
        public void FnInsertStaffQlfEntryAsync(string vendorNo, string staffNIDorNumber, int qualifCategory, string qualifcName, string institution, string startYear, string endYear, string outstandingAchievement, object userState) {
            if ((this.FnInsertStaffQlfEntryOperationCompleted == null)) {
                this.FnInsertStaffQlfEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStaffQlfEntryOperationCompleted);
            }
            this.InvokeAsync("FnInsertStaffQlfEntry", new object[] {
                        vendorNo,
                        staffNIDorNumber,
                        qualifCategory,
                        qualifcName,
                        institution,
                        startYear,
                        endYear,
                        outstandingAchievement}, this.FnInsertStaffQlfEntryOperationCompleted, userState);
        }
        
        private void OnFnInsertStaffQlfEntryOperationCompleted(object arg) {
            if ((this.FnInsertStaffQlfEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStaffQlfEntryCompleted(this, new FnInsertStaffQlfEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertStaffXPrEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertStaffXPrEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStaffXPrEntry(string vendorNo, string staffNIDorNumber, int xPrCategory, string xPrSummarry, string assignmentDescription, string startYear, string endYear, decimal yrsofXpr) {
            object[] results = this.Invoke("FnInsertStaffXPrEntry", new object[] {
                        vendorNo,
                        staffNIDorNumber,
                        xPrCategory,
                        xPrSummarry,
                        assignmentDescription,
                        startYear,
                        endYear,
                        yrsofXpr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStaffXPrEntryAsync(string vendorNo, string staffNIDorNumber, int xPrCategory, string xPrSummarry, string assignmentDescription, string startYear, string endYear, decimal yrsofXpr) {
            this.FnInsertStaffXPrEntryAsync(vendorNo, staffNIDorNumber, xPrCategory, xPrSummarry, assignmentDescription, startYear, endYear, yrsofXpr, null);
        }
        
        /// <remarks/>
        public void FnInsertStaffXPrEntryAsync(string vendorNo, string staffNIDorNumber, int xPrCategory, string xPrSummarry, string assignmentDescription, string startYear, string endYear, decimal yrsofXpr, object userState) {
            if ((this.FnInsertStaffXPrEntryOperationCompleted == null)) {
                this.FnInsertStaffXPrEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStaffXPrEntryOperationCompleted);
            }
            this.InvokeAsync("FnInsertStaffXPrEntry", new object[] {
                        vendorNo,
                        staffNIDorNumber,
                        xPrCategory,
                        xPrSummarry,
                        assignmentDescription,
                        startYear,
                        endYear,
                        yrsofXpr}, this.FnInsertStaffXPrEntryOperationCompleted, userState);
        }
        
        private void OnFnInsertStaffXPrEntryOperationCompleted(object arg) {
            if ((this.FnInsertStaffXPrEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStaffXPrEntryCompleted(this, new FnInsertStaffXPrEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnCompleteSupplierReg", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnCompleteSupplierReg_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCompleteSupplierReg(string vendorNo) {
            object[] results = this.Invoke("FnCompleteSupplierReg", new object[] {
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCompleteSupplierRegAsync(string vendorNo) {
            this.FnCompleteSupplierRegAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void FnCompleteSupplierRegAsync(string vendorNo, object userState) {
            if ((this.FnCompleteSupplierRegOperationCompleted == null)) {
                this.FnCompleteSupplierRegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCompleteSupplierRegOperationCompleted);
            }
            this.InvokeAsync("FnCompleteSupplierReg", new object[] {
                        vendorNo}, this.FnCompleteSupplierRegOperationCompleted, userState);
        }
        
        private void OnFnCompleteSupplierRegOperationCompleted(object arg) {
            if ((this.FnCompleteSupplierRegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCompleteSupplierRegCompleted(this, new FnCompleteSupplierRegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetOwnerPercentage", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetOwnerPercentage_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetOwnerPercentage(string vendorNo) {
            object[] results = this.Invoke("FnGetOwnerPercentage", new object[] {
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetOwnerPercentageAsync(string vendorNo) {
            this.FnGetOwnerPercentageAsync(vendorNo, null);
        }
        
        /// <remarks/>
        public void FnGetOwnerPercentageAsync(string vendorNo, object userState) {
            if ((this.FnGetOwnerPercentageOperationCompleted == null)) {
                this.FnGetOwnerPercentageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetOwnerPercentageOperationCompleted);
            }
            this.InvokeAsync("FnGetOwnerPercentage", new object[] {
                        vendorNo}, this.FnGetOwnerPercentageOperationCompleted, userState);
        }
        
        private void OnFnGetOwnerPercentageOperationCompleted(object arg) {
            if ((this.FnGetOwnerPercentageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetOwnerPercentageCompleted(this, new FnGetOwnerPercentageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertRFIresponseHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertRFIresponseHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertRFIresponseHeader(string vendorNo, string rfiDocumentNo) {
            object[] results = this.Invoke("FnInsertRFIresponseHeader", new object[] {
                        vendorNo,
                        rfiDocumentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertRFIresponseHeaderAsync(string vendorNo, string rfiDocumentNo) {
            this.FnInsertRFIresponseHeaderAsync(vendorNo, rfiDocumentNo, null);
        }
        
        /// <remarks/>
        public void FnInsertRFIresponseHeaderAsync(string vendorNo, string rfiDocumentNo, object userState) {
            if ((this.FnInsertRFIresponseHeaderOperationCompleted == null)) {
                this.FnInsertRFIresponseHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertRFIresponseHeaderOperationCompleted);
            }
            this.InvokeAsync("FnInsertRFIresponseHeader", new object[] {
                        vendorNo,
                        rfiDocumentNo}, this.FnInsertRFIresponseHeaderOperationCompleted, userState);
        }
        
        private void OnFnInsertRFIresponseHeaderOperationCompleted(object arg) {
            if ((this.FnInsertRFIresponseHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertRFIresponseHeaderCompleted(this, new FnInsertRFIresponseHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetLastDocumentNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetLastDocumentNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetLastDocumentNo(string vendorNo, string rfiDocumentNo) {
            object[] results = this.Invoke("FnGetLastDocumentNo", new object[] {
                        vendorNo,
                        rfiDocumentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetLastDocumentNoAsync(string vendorNo, string rfiDocumentNo) {
            this.FnGetLastDocumentNoAsync(vendorNo, rfiDocumentNo, null);
        }
        
        /// <remarks/>
        public void FnGetLastDocumentNoAsync(string vendorNo, string rfiDocumentNo, object userState) {
            if ((this.FnGetLastDocumentNoOperationCompleted == null)) {
                this.FnGetLastDocumentNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetLastDocumentNoOperationCompleted);
            }
            this.InvokeAsync("FnGetLastDocumentNo", new object[] {
                        vendorNo,
                        rfiDocumentNo}, this.FnGetLastDocumentNoOperationCompleted, userState);
        }
        
        private void OnFnGetLastDocumentNoOperationCompleted(object arg) {
            if ((this.FnGetLastDocumentNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetLastDocumentNoCompleted(this, new FnGetLastDocumentNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertRFIResponseLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertRFIResponseLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertRFIResponseLines(string documentNo, string procurementCategory, string rfiDocumentNo, string vendorNo) {
            object[] results = this.Invoke("FnInsertRFIResponseLines", new object[] {
                        documentNo,
                        procurementCategory,
                        rfiDocumentNo,
                        vendorNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertRFIResponseLinesAsync(string documentNo, string procurementCategory, string rfiDocumentNo, string vendorNo) {
            this.FnInsertRFIResponseLinesAsync(documentNo, procurementCategory, rfiDocumentNo, vendorNo, null);
        }
        
        /// <remarks/>
        public void FnInsertRFIResponseLinesAsync(string documentNo, string procurementCategory, string rfiDocumentNo, string vendorNo, object userState) {
            if ((this.FnInsertRFIResponseLinesOperationCompleted == null)) {
                this.FnInsertRFIResponseLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertRFIResponseLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertRFIResponseLines", new object[] {
                        documentNo,
                        procurementCategory,
                        rfiDocumentNo,
                        vendorNo}, this.FnInsertRFIResponseLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertRFIResponseLinesOperationCompleted(object arg) {
            if ((this.FnInsertRFIResponseLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertRFIResponseLinesCompleted(this, new FnInsertRFIResponseLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmitResponseFinal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmitResponseFinal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitResponseFinal(string vendorNo, string rfiDocumentNo, string repFullname, string repDesignation, string rfiApplNo) {
            object[] results = this.Invoke("FnSubmitResponseFinal", new object[] {
                        vendorNo,
                        rfiDocumentNo,
                        repFullname,
                        repDesignation,
                        rfiApplNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitResponseFinalAsync(string vendorNo, string rfiDocumentNo, string repFullname, string repDesignation, string rfiApplNo) {
            this.FnSubmitResponseFinalAsync(vendorNo, rfiDocumentNo, repFullname, repDesignation, rfiApplNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitResponseFinalAsync(string vendorNo, string rfiDocumentNo, string repFullname, string repDesignation, string rfiApplNo, object userState) {
            if ((this.FnSubmitResponseFinalOperationCompleted == null)) {
                this.FnSubmitResponseFinalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitResponseFinalOperationCompleted);
            }
            this.InvokeAsync("FnSubmitResponseFinal", new object[] {
                        vendorNo,
                        rfiDocumentNo,
                        repFullname,
                        repDesignation,
                        rfiApplNo}, this.FnSubmitResponseFinalOperationCompleted, userState);
        }
        
        private void OnFnSubmitResponseFinalOperationCompleted(object arg) {
            if ((this.FnSubmitResponseFinalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitResponseFinalCompleted(this, new FnSubmitResponseFinalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnInsertFiledetails_Rfi", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnInsertFiledetails_Rfi_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertFiledetails_Rfi(string vendorNo, string procDoctype, string docdescription, string certNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime issuedDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime expiryDate, string fileName, string documentNo) {
            object[] results = this.Invoke("FnInsertFiledetails_Rfi", new object[] {
                        vendorNo,
                        procDoctype,
                        docdescription,
                        certNo,
                        issuedDate,
                        expiryDate,
                        fileName,
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertFiledetails_RfiAsync(string vendorNo, string procDoctype, string docdescription, string certNo, System.DateTime issuedDate, System.DateTime expiryDate, string fileName, string documentNo) {
            this.FnInsertFiledetails_RfiAsync(vendorNo, procDoctype, docdescription, certNo, issuedDate, expiryDate, fileName, documentNo, null);
        }
        
        /// <remarks/>
        public void FnInsertFiledetails_RfiAsync(string vendorNo, string procDoctype, string docdescription, string certNo, System.DateTime issuedDate, System.DateTime expiryDate, string fileName, string documentNo, object userState) {
            if ((this.FnInsertFiledetails_RfiOperationCompleted == null)) {
                this.FnInsertFiledetails_RfiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertFiledetails_RfiOperationCompleted);
            }
            this.InvokeAsync("FnInsertFiledetails_Rfi", new object[] {
                        vendorNo,
                        procDoctype,
                        docdescription,
                        certNo,
                        issuedDate,
                        expiryDate,
                        fileName,
                        documentNo}, this.FnInsertFiledetails_RfiOperationCompleted, userState);
        }
        
        private void OnFnInsertFiledetails_RfiOperationCompleted(object arg) {
            if ((this.FnInsertFiledetails_RfiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertFiledetails_RfiCompleted(this, new FnInsertFiledetails_RfiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnSubmisionResponseStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnSubmisionResponseStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmisionResponseStatus(string rfiDocumentNo) {
            object[] results = this.Invoke("FnSubmisionResponseStatus", new object[] {
                        rfiDocumentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmisionResponseStatusAsync(string rfiDocumentNo) {
            this.FnSubmisionResponseStatusAsync(rfiDocumentNo, null);
        }
        
        /// <remarks/>
        public void FnSubmisionResponseStatusAsync(string rfiDocumentNo, object userState) {
            if ((this.FnSubmisionResponseStatusOperationCompleted == null)) {
                this.FnSubmisionResponseStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmisionResponseStatusOperationCompleted);
            }
            this.InvokeAsync("FnSubmisionResponseStatus", new object[] {
                        rfiDocumentNo}, this.FnSubmisionResponseStatusOperationCompleted, userState);
        }
        
        private void OnFnSubmisionResponseStatusOperationCompleted(object arg) {
            if ((this.FnSubmisionResponseStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmisionResponseStatusCompleted(this, new FnSubmisionResponseStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eprocurement:FnGetEvalCritScores", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", ResponseElementName="FnGetEvalCritScores_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eprocurement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal FnGetEvalCritScores(string templateID, int evaluationType) {
            object[] results = this.Invoke("FnGetEvalCritScores", new object[] {
                        templateID,
                        evaluationType});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetEvalCritScoresAsync(string templateID, int evaluationType) {
            this.FnGetEvalCritScoresAsync(templateID, evaluationType, null);
        }
        
        /// <remarks/>
        public void FnGetEvalCritScoresAsync(string templateID, int evaluationType, object userState) {
            if ((this.FnGetEvalCritScoresOperationCompleted == null)) {
                this.FnGetEvalCritScoresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetEvalCritScoresOperationCompleted);
            }
            this.InvokeAsync("FnGetEvalCritScores", new object[] {
                        templateID,
                        evaluationType}, this.FnGetEvalCritScoresOperationCompleted, userState);
        }
        
        private void OnFnGetEvalCritScoresOperationCompleted(object arg) {
            if ((this.FnGetEvalCritScoresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetEvalCritScoresCompleted(this, new FnGetEvalCritScoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnRegisterVendorCompletedEventHandler(object sender, FnRegisterVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRegisterVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRegisterVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ResetPassCompletedEventHandler(object sender, ResetPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnApplyPreQualificationCompletedEventHandler(object sender, FnApplyPreQualificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplyPreQualificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplyPreQualificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCurrentYearCompletedEventHandler(object sender, GetCurrentYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnApplyRFQCompletedEventHandler(object sender, FnApplyRFQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplyRFQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplyRFQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ApplyRFQOLDCompletedEventHandler(object sender, ApplyRFQOLDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyRFQOLDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyRFQOLDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendEmailCompletedEventHandler(object sender, SendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ActivateAccountCompletedEventHandler(object sender, ActivateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnAddDirectorsCompletedEventHandler(object sender, FnAddDirectorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddDirectorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddDirectorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnApplyforTenderCompletedEventHandler(object sender, FnApplyforTenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplyforTenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplyforTenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnCountOpenTendersCompletedEventHandler(object sender, FnCountOpenTendersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCountOpenTendersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCountOpenTendersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnCountAppliedTendersCompletedEventHandler(object sender, FnCountAppliedTendersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCountAppliedTendersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCountAppliedTendersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnCountTendersAwardedCompletedEventHandler(object sender, FnCountTendersAwardedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCountTendersAwardedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCountTendersAwardedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnApplyforOpenTenderCompletedEventHandler(object sender, FnApplyforOpenTenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplyforOpenTenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplyforOpenTenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertBlogCompletedEventHandler(object sender, FnInsertBlogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBlogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBlogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertBlogReplyCompletedEventHandler(object sender, FnInsertBlogReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBlogReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBlogReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnChangePasswordCompletedEventHandler(object sender, FnChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnEditProfileCompletedEventHandler(object sender, FnEditProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnResetPasswordCompletedEventHandler(object sender, FnResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnGenerateVendorstatementCompletedEventHandler(object sender, FnGenerateVendorstatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateVendorstatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateVendorstatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnGenerateRfQDocumentCompletedEventHandler(object sender, FnGenerateRfQDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateRfQDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateRfQDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnAddPurchaseReqLineCompletedEventHandler(object sender, FnAddPurchaseReqLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddPurchaseReqLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddPurchaseReqLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnReqforRegistrationCompletedEventHandler(object sender, FnReqforRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnReqforRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnReqforRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnBLOBRfQDocumentCompletedEventHandler(object sender, FnBLOBRfQDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnBLOBRfQDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnBLOBRfQDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string bigText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnDownloadRfQPTDocCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnSupplierRegistrationCompletedEventHandler(object sender, FnSupplierRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSupplierRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSupplierRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertBankCompletedEventHandler(object sender, FnInsertBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnDeleteBankCompletedEventHandler(object sender, FnDeleteBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertDirectorCompletedEventHandler(object sender, FnInsertDirectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertDirectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertDirectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertLitigationHCompletedEventHandler(object sender, FnInsertLitigationHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertLitigationHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertLitigationHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertSpecialGrpCompletedEventHandler(object sender, FnInsertSpecialGrpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertSpecialGrpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertSpecialGrpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertPastXepCompletedEventHandler(object sender, FnInsertPastXepCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPastXepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPastXepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertBalanceSheetCompletedEventHandler(object sender, FnInsertBalanceSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBalanceSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBalanceSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertIncomestatementCompletedEventHandler(object sender, FnInsertIncomestatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertIncomestatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertIncomestatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertFiledetailsCompletedEventHandler(object sender, FnInsertFiledetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertFiledetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertFiledetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertStaffEntryCompletedEventHandler(object sender, FnInsertStaffEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStaffEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStaffEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertStaffQlfEntryCompletedEventHandler(object sender, FnInsertStaffQlfEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStaffQlfEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStaffQlfEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertStaffXPrEntryCompletedEventHandler(object sender, FnInsertStaffXPrEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStaffXPrEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStaffXPrEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnCompleteSupplierRegCompletedEventHandler(object sender, FnCompleteSupplierRegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCompleteSupplierRegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCompleteSupplierRegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnGetOwnerPercentageCompletedEventHandler(object sender, FnGetOwnerPercentageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetOwnerPercentageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetOwnerPercentageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertRFIresponseHeaderCompletedEventHandler(object sender, FnInsertRFIresponseHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertRFIresponseHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertRFIresponseHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnGetLastDocumentNoCompletedEventHandler(object sender, FnGetLastDocumentNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetLastDocumentNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetLastDocumentNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertRFIResponseLinesCompletedEventHandler(object sender, FnInsertRFIResponseLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertRFIResponseLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertRFIResponseLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnSubmitResponseFinalCompletedEventHandler(object sender, FnSubmitResponseFinalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitResponseFinalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitResponseFinalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertFiledetails_RfiCompletedEventHandler(object sender, FnInsertFiledetails_RfiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertFiledetails_RfiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertFiledetails_RfiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnSubmisionResponseStatusCompletedEventHandler(object sender, FnSubmisionResponseStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmisionResponseStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmisionResponseStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnGetEvalCritScoresCompletedEventHandler(object sender, FnGetEvalCritScoresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetEvalCritScoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetEvalCritScoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591